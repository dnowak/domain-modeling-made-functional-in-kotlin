import org.gradle.api.tasks.testing.logging.TestExceptionFormat

import static kotlinx.kover.api.CoverageEngine.INTELLIJ

buildscript {
    ext.kotlin_version = '1.9.10'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.springframework.boot' version '2.6.0'
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlin_version"
    id 'org.jetbrains.kotlinx.kover' version '0.4.2'
}

apply plugin: 'io.spring.dependency-management'

group = 'io.github.dnowak'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    kotest_version = '5.6.2'
    kotlin_coroutines_version = '1.7.3'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:$kotlin_coroutines_version"


    implementation platform('io.arrow-kt:arrow-stack:1.2.0')
    implementation 'io.arrow-kt:arrow-core'
    implementation 'io.arrow-kt:arrow-fx-coroutines'
    implementation 'app.cash.quiver:lib:0.4.0'

    implementation 'io.github.microutils:kotlin-logging:2.0.11'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation('org.springframework.boot:spring-boot-starter-webflux') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"
    testImplementation "io.kotest.extensions:kotest-property-arbs:2.1.2"
    testImplementation "io.kotest.extensions:kotest-assertions-arrow:1.3.3"
    testImplementation "io.github.serpro69:kotlin-faker:1.14.0"
    testImplementation 'io.mockk:mockk:1.13.5'
}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '17'
}

tasks.test {
    kover {
        enabled = true
        includes = ['io\\.github\\.dnowak\\..*']
        excludes = ['.*\\.config\\..*']
    }
}

tasks.koverHtmlReport {
    enabled = true                          // false to disable report generation
}

tasks.koverXmlReport {
    enabled = true                          // false to disable report generation
}

test {
    useJUnitPlatform {
        includeEngines 'kotest', 'junit-jupiter'
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true
    }
}

kover {
    enabled = true                          // false to disable instrumentation of all test tasks in all modules
    coverageEngine.set(INTELLIJ) // change instrumentation agent and reporter
    generateReportOnCheck.set(true)         // false to do not execute `koverReport` task before `check` task
}

/*
tasks.koverVerify {
    rule {
        name = "Minimal line coverage rate in percents"
        bound {
            minValue = 50
            // valueType is 'COVERED_LINES_PERCENTAGE' by default
        }
    }
}
*/
